//
//  TimeGuardian.swift
//  WhatToEat
//
//  Created by YuCheng on 2021/3/3.
//  Copyright Â© 2021 YuCheng. All rights reserved.
//

import Foundation
import Flynn

class TimeGuardian: Actor {
    private func _beUTC_ISO8601Date(
        sender:Actor,dateString: String,
        _ complete: @escaping (Date) -> Void) {
        let newDate = dateString.toUTC_ISO8601Date()
        sender.unsafeSend {
            complete(newDate)
        }
    }
    private func _beUTC_ISO8601DateString(
        sender: Actor,date: Date,
        _ complete: @escaping (String) -> Void) {
        let utcString = date.toUTC_ISO8601Text()
        sender.unsafeSend {
            complete(utcString)
        }
    }
    private func _beToUTCString(
        sender: Actor,
        date: Date, dateStyle: DateFormatter.Style,
        timeStyle: DateFormatter.Style,
        _ complete: @escaping (String) -> Void) {
        let newDateString =
            date.toUTCText(dateStyle: dateStyle, timeStyle: timeStyle)
        sender.unsafeSend {
            complete(newDateString)
        }
    }
    private func _beToUTC(
        sender:Actor,formatter: String,dateToConvert:String,
        _ complete: @escaping (String) -> Void) {
        let utcString =
            dateToConvert.covertToUTCText(formatter: formatter)
        sender.unsafeSend {
            complete(utcString)
        }
    }
    private func _beDateToString(
        sender: Actor,date:Date, dateFormat: String,
        _ complete: @escaping (String) -> Void) {
        let formatter = DateFormatter()
        formatter.dateFormat = dateFormat
        let dateString = date.toDateText(dateFormat: dateFormat)
        sender.unsafeSend {
            complete(dateString)
        }
    }
    private func _beStringToDate(
        sender:Actor,
        toDate dateString: String, formatter: String,
        _ complete: @escaping (Date) -> Void) {
        let newDate = dateString.toDate(formatter: formatter)
        sender.unsafeSend {
            complete(newDate)
        }
    }
}

// MARK: - Autogenerated by FlynnLint
// Contents of file after this marker will be overwritten as needed

extension TimeGuardian {

    @discardableResult
    public func beUTC_ISO8601Date(sender: Actor, dateString: String, _ complete: @escaping (Date) -> Void) -> Self {
        unsafeSend { self._beUTC_ISO8601Date(sender: sender, dateString: dateString, complete) }
        return self
    }
    @discardableResult
    public func beUTC_ISO8601DateString(sender: Actor, date: Date, _ complete: @escaping (String) -> Void) -> Self {
        unsafeSend { self._beUTC_ISO8601DateString(sender: sender, date: date, complete) }
        return self
    }
    @discardableResult
    public func beToUTCString(sender: Actor, date: Date, dateStyle: DateFormatter.Style, timeStyle: DateFormatter.Style, _ complete: @escaping (String) -> Void) -> Self {
        unsafeSend { self._beToUTCString(sender: sender, date: date, dateStyle: dateStyle, timeStyle: timeStyle, complete) }
        return self
    }
    @discardableResult
    public func beToUTC(sender: Actor, formatter: String, dateToConvert: String, _ complete: @escaping (String) -> Void) -> Self {
        unsafeSend { self._beToUTC(sender: sender, formatter: formatter, dateToConvert: dateToConvert, complete) }
        return self
    }
    @discardableResult
    public func beDateToString(sender: Actor, date: Date, dateFormat: String, _ complete: @escaping (String) -> Void) -> Self {
        unsafeSend { self._beDateToString(sender: sender, date: date, dateFormat: dateFormat, complete) }
        return self
    }
    @discardableResult
    public func beStringToDate(sender: Actor, toDate dateString: String, formatter: String, _ complete: @escaping (Date) -> Void) -> Self {
        unsafeSend { self._beStringToDate(sender: sender, toDate: dateString, formatter: formatter, complete) }
        return self
    }

}
